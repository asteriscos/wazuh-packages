"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _aggregation_fields = require("../aggregation_fields");

const generalAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const awsAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const fimAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['syscheck.path'], _aggregation_fields.AggregationFields['syscheck.event']]
};
const gcpAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const officeAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const pciAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['rule.pci_dss'], _aggregation_fields.AggregationFields['rule.description']]
};
const gdprAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['rule.gdpr'], _aggregation_fields.AggregationFields['rule.description']]
};
const nistAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['rule.nist_800_53'], _aggregation_fields.AggregationFields['rule.level']]
};
const hipaaAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['rule.hipaa'], _aggregation_fields.AggregationFields['rule.level']]
};
const tscAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['rule.tsc'], _aggregation_fields.AggregationFields['rule.description']]
};
const virustotalAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const osqueryAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['data.osquery.name'], _aggregation_fields.AggregationFields['data.osquery.action'], _aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['data.osquery.pack'], _aggregation_fields.AggregationFields['data.osquery.calendarTime']]
};
const mitreAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const ciscatAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['data.cis.rule_title'], _aggregation_fields.AggregationFields['data.cis.group'], _aggregation_fields.AggregationFields['data.cis.result']]
};
const pmAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['data.title']]
};
const dockerAlertsSummary = {
  title: 'Events summary',
  aggs: [_aggregation_fields.AggregationFields['data.docker.Actor.Attributes.name'], _aggregation_fields.AggregationFields['data.docker.Action'], _aggregation_fields.AggregationFields['timestamp']]
};
const githubAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['data.github.org'], _aggregation_fields.AggregationFields['rule.description']]
}; // 'Wazuh-App-Overview-OSCAP-Last-alerts'

const oscapLastAlerts = {
  title: 'Last alerts',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['data.oscap.check.title'], _aggregation_fields.AggregationFields['data.oscap.scan.profile.title']]
}; // 'Wazuh-App-Overview-Audit-Last-alerts'

const auditLastAlerts = {
  title: 'Last alerts',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['data.audit.exe']]
};
var _default = {
  aws: [awsAlertsSummary],
  ciscat: [ciscatAlertsSummary],
  docker: [dockerAlertsSummary],
  fim: [fimAlertsSummary],
  gcp: [gcpAlertsSummary],
  gdpr: [gdprAlertsSummary],
  general: [generalAlertsSummary],
  github: [githubAlertsSummary],
  hipaa: [hipaaAlertsSummary],
  mitre: [mitreAlertsSummary],
  nist: [nistAlertsSummary],
  office: [officeAlertsSummary],
  oscap: [oscapLastAlerts],
  osquery: [osqueryAlertsSummary],
  pci: [pciAlertsSummary],
  pm: [pmAlertsSummary],
  tsc: [tscAlertsSummary],
  virustotal: [virustotalAlertsSummary],
  audit: [auditLastAlerts]
};
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,